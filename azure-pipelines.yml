trigger:
 branches:
   include:
     - master
stages:
  - stage: Build_stage
    displayName: Build
    jobs:
      - job:
        displayName: web app
        pool:
          vmImage: ubuntu-latest
        variables:
          BuildConfiguration: Release
        steps:
        - task: DotNetCoreCLI@2
          displayName: restore
          inputs:
            command: 'restore'
            projects: '**/WebApp.csproj'
            feedsToUse: 'select'
            
        - task: DotNetCoreCLI@2
          displayName: build
          inputs:
            command: 'build'
            projects: '**/WebApp.csproj'
            arguments: '--configuration $(BuildConfiguration)'
          
        - task: DotNetCoreCLI@2
          displayName: publish
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
            zipAfterPublish: true
          
        - task: PublishBuildArtifacts@1
          displayName: PublishBuildArtifacts
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: Container
          
        - task: DownloadBuildArtifacts@1
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'
  
  - stage: DeployWebsite
    displayName: 'Deploy website'        
    pool:
      vmImage: ubuntu-latest
    
    jobs:    
    - deployment: DeployWebsite
      displayName: 'Deploy website'
      environment: 'dotnetvm'
      strategy:
       runOnce:
         deploy:           
          steps:
          - checkout: none
          
          - download: 'current'
            name: 'DownloadBuildArtifacts'            
            displayName: 'Download build artifacts'
            artifact: 'drop'
          - script: |
               sudo unzip /home/vsts/work/1/drop/WebApp.zip  -d  /home/vsts/work/1/s
               dotnet watch -d  WebApp.dll
  

              

            
            